# The CORRECT workflow file with all diagnostics
name: Netguard CI - Build and Integration Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create .env file from Secrets
        run: |
          echo "IFACE=eth0" >> .env
          echo "SCAN_TARGET_CIDR=192.168.76.140/24" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "DB_HOST=postgres_db" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_DRIVER=pg8000" >> .env
          echo "ELASTICSEARCH_URI=http://elasticsearch:9200" >> .env
          echo "DATABASE_URL=postgresql+pg8000://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@postgres_db:5432/${{ secrets.POSTGRES_DB }}" >> .env

      - name: Build and Run Docker Services
        run: docker compose up -d --build

      - name: Wait for services to initialize
        run: |
          echo "Waiting for 90 seconds for all services to build and initialize..."
          sleep 90

      # --- NEW DIAGNOSTIC STEPS ---
      - name: Check status of running containers
        run: docker compose ps

      - name: Display Backend Service Logs
        # Check your docker-compose.yml for the correct service name! (e.g., 'backend', 'api', 'web')
        run: docker compose logs netguard_app

      # --- HEALTH CHECKS ---
      - name: Health Check - Check if backend API is responsive
        run: |
          echo "Attempting to connect to the backend API..."
          curl --fail http://localhost:8000/docs || exit 1

      - name: Health Check - Check if Elasticsearch is responsive
        run: |
          echo "Attempting to connect to Elasticsearch..."
          curl --fail http://localhost:9200 || exit 1
